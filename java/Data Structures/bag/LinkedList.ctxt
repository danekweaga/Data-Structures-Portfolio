#BlueJ class context
comment0.target=LinkedList
comment0.text=\r\n\ A\ LinkedList\ class\ consisting\ of\ singly\ linked\ nodes.\r\n\ \r\n\ @title\ \ \ LinkedList\ class\r\n\ @author\ \ Chukwunonso\ Ekweaga\r\n
comment1.params=
comment1.target=LinkedList()
comment1.text=\r\n\ Constructor\r\n
comment10.params=
comment10.target=void\ clearList()
comment10.text=\r\n\ Method\ that\ deletes\ all\ the\ nodes\ in\ the\ LinkedList\r\n
comment11.params=
comment11.target=LinkedList.LinkedListIterator\ iterator()
comment11.text=\r\n\ Method\ to\ return\ an\ iterator\ over\ the\ linked\ list\r\n\r\n\ @return\ LinkedListIterator\ instance\r\n
comment2.params=data
comment2.target=void\ insertAtStart(java.lang.Object)
comment2.text=\r\n\ Method\ to\ insert\ a\ node\ at\ the\ beginning\ of\ the\ linked\ List\r\n\ \r\n\ @param\ data\ -\ The\ value\ of\ the\ data\ will\ be\ stored\ in\ the\ node\r\n
comment3.params=data
comment3.target=void\ insertAtEnd(java.lang.Object)
comment3.text=\r\n\ Method\ to\ insert\ a\ node\ at\ the\ end\ of\ the\ linked\ List\r\n\ \r\n\ @param\ data\ -\ The\ value\ of\ the\ data\ will\ be\ stored\ in\ the\ node\r\n
comment4.params=
comment4.target=java.lang.Object\ deleteAtStart()
comment4.text=\r\n\ Method\ that\ deletes\ the\ node\ at\ the\ beginning\ of\ the\ Linked\ List\r\n\ \r\n\ @return\ \ -\ the\ node\ deleted\ from\ the\ linkedlist\r\n
comment5.params=
comment5.target=java.lang.Object\ deleteAtEnd()
comment5.text=\r\n\ Method\ that\ deletes\ the\ node\ at\ the\ end\ of\ the\ Linked\ List\r\n\ \r\n\ @return\ output\ -\ the\ node\ deleted\ from\ the\ linkedlist\r\n
comment6.params=data
comment6.target=boolean\ searchList(java.lang.Object)
comment6.text=\r\n\ Method\ that\ traverses\ the\ linkedList\ till\ it\ finds\ the\ node\ containing\ the\ data\ needed\r\n\ \r\n\ @returns\ output\ -\ true\ if\ the\ value\ is\ in\ the\ LinkedList\ ,\ otherwise\ false.\r\n
comment7.params=
comment7.target=void\ printList()
comment7.text=\r\n\ Method\ that\ prints\ the\ value\ of\ each\ node\ in\ the\ LinkedList\r\n\ \r\n\ @returns\ output\ -\ the\ value\ of\ each\ in\ node\ in\ the\ LinkedList\r\n
comment8.params=
comment8.target=int\ size()
comment8.text=\r\n\ Method\ that\ tracks\ the\ size\ of\ the\ LinkedList\r\n\r\n\ @return\ size\ -\ the\ current\ size\ of\ the\ LinkedList.\r\n
comment9.params=
comment9.target=boolean\ isEmpty()
comment9.text=\r\n\ Method\ that\ checks\ whether\ the\ linked\ list\ is\ empty.\r\n\r\n\ @return\ -\ true\ if\ the\ list\ has\ no\ nodes\ ,\ false\ otherwise.\r\n
numComments=12
